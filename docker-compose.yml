services:
  mysql:
    image: mysql:8
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: appointment_system
      MYSQL_USER: franklin
      MYSQL_PASSWORD: 123
    ports:
      - "3307:3306"
    dns:
      - 8.8.8.8
      - 1.1.1.1
    volumes:
      - mysql_data:/var/lib/mysql

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: express_backend
    restart: always
    depends_on:
      - mysql
    env_file:
      - ./backend/.env.local
    environment:
      DB_HOST: mysql
      DB_USER: franklin
      DB_PASSWORD: 123
      DB_NAME: appointment_system
      PORT: 5001  
    expose:
      - "5001" 
    dns:
      - 8.8.8.8
      - 1.1.1.1
    extra_hosts:
      - "host.docker.internal:host-gateway" 
    volumes:
      - ./backend:/app
    working_dir: /app
    command: ["npm", "run", "dev"]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nextjs_frontend
    restart: always
    environment:
      NEXT_PUBLIC_BACKEND_HOST: /api
    depends_on:
      - backend
    expose:
      - "3000"  # only exposed internally
    dns:
      - 8.8.8.8
      - 1.1.1.1
    volumes:
      - ./frontend:/app
      - /app/.next
    working_dir: /app
    command: ["npm", "run", "dev"]

  nginx:
    image: nginx:latest
    container_name: nginx_reverse_proxy
    depends_on:
      - backend
      - frontend
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    restart: always
  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok_tunnel
    depends_on:
      - nginx
    volumes:
      - ~/.config/ngrok/ngrok.yml:/etc/ngrok.yml
    command: ["start", "--all", "--config", "/etc/ngrok.yml", "--log=stdout", "--log-format=json"]
    restart: always

volumes:
  mysql_data:
